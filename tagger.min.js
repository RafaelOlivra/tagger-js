const tagger={mainCallback:null,_init:async function(){if(this.utilIsBot())return void console.log("[Tagger] Bypassed.");let e=await this.userExists();if(window?.taggerConfig?.remoteSync&&window?.taggerConfig?.remoteEndpoint)try{e?console.log("[Tagger] Syncing existing user data with remote..."):console.log("[Tagger] No existing user. Syncing by user IP..."),await this._syncRemoteData()}catch(e){console.error("[Tagger] Remote sync error during init: ",e),console.log("[Tagger] Proceeding with local data only.")}const t=await this._retrieveUserID();window.taggerUserID=t,console.log("[Tagger] UserID:",t),window.taggerUserParams=this.getUserParams(),console.log("[Tagger] Ready!"),document.addEventListener("DOMContentLoaded",async()=>{setTimeout(async()=>{this.triggerEvent(window,"tagger:init",[t]),await this.reload()},100)})},_bindEvents:function(){const e=this;document.querySelectorAll(".tg-form-submit").forEach(t=>{t.addEventListener("submit",function(t){e.fireCallback("tagger-submit",t)})});document.querySelectorAll(".tg-swap-child-href>a").forEach(e=>{e.classList.add("tg-conv-click")}),document.body.addEventListener("click",function(t){t.target.closest(".tg-conv-click")&&(e.doParamsSwap(),e.fireCallback("tagger-click",t))}),document.body.addEventListener("mousedown",function(t){1===t.button&&t.target.closest(".tg-conv-click")&&(e.doParamsSwap(),e.fireCallback("tagger-click",t))}),window.addEventListener("updated",function t(){window.removeEventListener("updated",t),setTimeout(async()=>{await e.reload()},100)},{once:!0})},registerCallback:function(e){return"function"==typeof e?(this.mainCallback=e,!0):(console.error("[Tagger] Invalid callback",e),!1)},fireCallback:function(e,t){"function"==typeof this.mainCallback?this.mainCallback(e,t):console.error("[Tagger] No callback function registered!")},userExists:async function(){return!!await this._retrieveUserID(!1)},getUserID:()=>window.taggerUserID,_retrieveUserID:async function(e=!0){let t=this.getData("userID");if(!t&&e){const e=window?.taggerConfig?.prefix??"tg-",a=(new Date).getTime();t=await this.createNewUserID(e),this.storeData("userID",t),this.storeData("userCreateTime",a),this.storeData("updatedTime",a),console.log("[Tagger] UserID Created"),this.triggerEvent(window,"tagger:userIDCreated",[t])}return t},createNewUserID:async function(e){let t=await this.utilGetUserIp()+navigator.userAgent+(new Date).getTime();return t=await this.utilSHA1(t),(e??"")+t},getUserParams:function(){let e=new URLSearchParams(window.location.search),t=window?.taggerConfig?.userParams??["utm_source","utm_medium","utm_campaign","utm_term","gclid","gbraid","fbclid","ref"];!t&&window?.taggerConfig?.userURLParams&&(t=window.taggerConfig.userURLParams);let a=this.getData("userParams");a||(a=this.getData("userURLParams")),a&&"object"==typeof a||(a={});let r=!1;t.forEach(t=>{e.has(t)&&!(t in a)&&(a[t]=e.get(t),r=!0)}),a.timestamp||(a.timestamp=(new Date).getTime(),r=!0);return document.cookie.split("; ").forEach(e=>{let[t,o]=e.split("=");if(!t.startsWith("__tg-param-"))return;const i=t.trim().replace(/^__tg-param-/,"");if(i&&!(i in a))try{o=atob(decodeURIComponent(o).trim()),a[i]=o,r=!0}catch(e){console.error("[Tagger] Error decoding cookie value: ",e)}}),r&&(this.storeData("userParams",a),this.storeData("updatedTime",(new Date).getTime())),a},getUserParam:function(e){return this.getUserParams()[e]},setUserParam:function(e,t){let a=this.getUserParams();a[e]=t,this.storeData("userParams",a),this.storeData("updatedTime",(new Date).getTime()),window.taggerUserParams=a},storeData:function(e,t){e="__tg-"+e;try{const a=JSON.stringify(t),r=btoa(encodeURIComponent(a));return this.utilSetCookie(e,r,365),localStorage.setItem(e,r),t}catch(e){console.error("[Tagger] Error storing data: ",e)}},getData:function(e){e="__tg-"+e;try{let t=this.utilGetCookie(e);if(t||(t=localStorage.getItem(e),t&&this.utilSetCookie(e,t,365)),t)try{const e=decodeURIComponent(atob(t)),a=JSON.parse(e);if(a&&("object"==typeof a||"string"==typeof a))return a}catch(t){console.warn("[Tagger] Error decoding or parsing data for key:",e,t)}return null}catch(t){return console.error("[Tagger] Error retrieving data for key:",e,t),null}},_syncRemoteData:async function(e=!1){if(!window?.taggerConfig?.remoteSync||!window.taggerConfig.remoteEndpoint)return;const t=window.taggerConfig.remoteEndpoint,a=this._getSyncableData(),r=Object.keys(a).length>=2,o=await this.utilGetUserIp();try{let i=r&&!e?"GET_CHECK":"GET_FULL";r&&(e||this.isLocalDataNewer(a))?i="POST":r&&!this.isLocalDataNewer(a)&&(i="GET_CHECK"),console.log(`[Tagger] Remote sync action: ${i}`);let n=null,s=t;if("POST"===i){const e=this._prepareRemotePayload(o,a),t=await fetch(s,{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify(e)});return void(t.ok?(n=await t.json(),n.updated?console.log("[Tagger] Remote data updated."):n.data&&this.isRemoteDataNewer(n.data)&&this._applyRemoteData(n.data)):console.error("[Tagger] Remote sync POST failed:",t.statusText))}{if(s+=`?ip=${btoa(o)}`,"GET_CHECK"===i){const e=a.updatedTime||a.userParams?.timestamp||0;e&&(s+=`&updatedTime=${e}`)}const e=await fetch(s,{method:"GET"});if(e.ok)if(n=await e.json(),n.data){const e=this._decodeRemoteData(n.data);e&&this.isRemoteDataNewer(e)?this._applyRemoteData(e):console.log("[Tagger] Remote data is not newer or is invalid.")}else!1===n.updated&&"GET_CHECK"===i&&await this._syncRemoteData(!0);else console.error("[Tagger] Remote sync GET failed:",e.statusText)}}catch(e){console.error("[Tagger] Remote sync communication error: ",e)}},_prepareRemotePayload:function(e,t){const a={...t,ip:e,userAgent:navigator.userAgent,referer:document.referrer},r=JSON.stringify(a);return{data:btoa(encodeURIComponent(r))}},_getSyncableData:function(){const e={},t=this.getData("userID"),a=this.getData("userParams"),r=this.getData("userCreateTime"),o=this.getData("updatedTime");return t&&(e.userID=t),a&&(e.userParams=a),r&&(e.userCreateTime=r),o&&(e.updatedTime=o),e},isLocalDataNewer:function(e){return(e.updatedTime||e.userParams?.timestamp||0)>(this.getData("remoteUpdatedTime")||0)},isRemoteDataNewer:function(e){const t=this.getData("updatedTime")||this.getData("userParams")?.timestamp||0;return(e.updatedTime||e.userParams?.timestamp||0)>t},_decodeRemoteData:function(e){try{const t=decodeURIComponent(atob(e));return JSON.parse(t)}catch(e){return console.error("[Tagger] Error decoding or parsing remote data: ",e),null}},_applyRemoteData:function(e){e.userID&&(this.storeData("userID",e.userID),window.taggerUserID=e.userID),e.userParams&&(this.storeData("userParams",e.userParams),window.taggerUserParams=e.userParams),e.userCreateTime&&this.storeData("userCreateTime",e.userCreateTime),e.updatedTime&&this.storeData("updatedTime",e.updatedTime),console.log("[Tagger] Remote data applied."),this.triggerEvent(window,"tagger:remoteSyncApplied")},getInstance:function(){return this},doParamsSwap:function(){const e=this;document.querySelectorAll(".tg-swap-child-href>a").forEach(e=>{e.classList.add("tg-swap-href")});const t=document.querySelectorAll(".tg-swap-href");for(const a of t){if(a.classList.contains("tg-swap-href-done"))continue;let t=a.getAttribute("href"),r=e.utilMoveURLParamsToNewURL(t);r=e.utilSanitizeURL(r),a.setAttribute("href",r),a.classList.add("tg-swap-href-done")}},reload:async function(){this._bindEvents(),console.log("[Tagger] Reloaded"),this.triggerEvent(window,"tagger:reload")},utilMoveURLParamsToNewURL:function(e,t=!0){if(!e||"#"===e)return e;try{let a=new URLSearchParams(window.location.search),r=new URL(e,window.location.href);if(a.forEach((e,t)=>{"user_id"!==t&&r.searchParams.append(t,e)}),t){let e=this.getUserID();r.searchParams.append("user_id",e)}return r.href}catch(t){return console.error("[Tagger] Error moving URL params to new URL: ",t),e}},utilGetParamFromURL:function(e){return new URLSearchParams(window.location.search).get(e)},utilGetUserIp:async function(){try{const e=await fetch("https://api.ipify.org?format=json");if(e.ok){const t=await e.json();if(this.utilValidateIp(t.ip))return t.ip}}catch(e){try{const e=await fetch("https://ipinfo.io/json");if(e.ok){const t=await e.json();if(this.utilValidateIp(t.ip))return t.ip}}catch(e){return console.error("[Tagger] Error retrieving user ip: ",e),"unknown"}}},utilValidateIp:function(e){return/^(?:[0-9]{1,3}\.){3}[0-9]{1,3}$|^([0-9a-fA-F]{1,4}:){7,7}[0-9a-fA-F]{1,4}|^([0-9a-fA-F]{1,4}:){1,7}:|^([0-9a-fA-F]{1,4}:){1,6}:[0-9a-fA-F]{1,4}|^([0-9a-fA-F]{1,4}:){1,5}(:[0-9a-fA-F]{1,4}){1,2}|^([0-9a-fA-F]{1,4}:){1,4}(:[0-9a-fA-F]{1,4}){1,3}|^([0-9a-fA-F]{1,4}:){1,3}(:[0-9a-fA-F]{1,4}){1,4}|^([0-9a-fA-F]{1,4}:){1,2}(:[0-9a-fA-F]{1,4}){1,5}|^[0-9a-fA-F]{1,4}:((:[0-9a-fA-F]{1,4}){1,6})|:((:[0-9a-fA-F]{1,4}){1,7}|:)$/.test(e)},utilIsBot:function(){const e=navigator.userAgent.toLowerCase();return["bot","crawl","spider","lighthouse"].some(t=>e.includes(t))},utilSHA1:async function(e){const t=(new TextEncoder).encode(e),a=await crypto.subtle.digest("SHA-1",t);return Array.from(new Uint8Array(a)).map(e=>("00"+e.toString(16)).slice(-2)).join("")},utilSanitizeURL:function(e){return e?e=(e=(e=e.replace(/<script\b[^<]*(?:(?!<\/script>)<[^<]*)*<\/script>/gi,"")).replace(/[\\"'<>(){}]/g,"")).trim():e},utilGetCurrentDomain:function(){let e=window.location.hostname;e=e.replace(/^www\./,"");const t=e.split(".");return t.length>2&&(e=t.slice(-2).join(".")),e},utilSetCookie:function(e,t,a){let r="";if(a){const e=new Date;e.setTime(e.getTime()+24*a*60*60*1e3),r="; expires="+e.toUTCString()}document.cookie=e+"="+(t||"")+r+"; domain="+this.utilGetCurrentDomain()+"; path=/"},utilGetCookie:function(e){const t=e+"=",a=document.cookie.split(";");for(let e=0;e<a.length;e++){let r=a[e];for(;" "===r.charAt(0);)r=r.substring(1,r.length);if(0===r.indexOf(t))return r.substring(t.length,r.length)}return null},triggerEvent:function(e,t,a=[]){const r=new CustomEvent(t,{detail:a});e.dispatchEvent(r)}},_taggerAutoInit=()=>{if(window.taggerLoaded||window.__taggerInitInProgress)return void console.log("[Tagger] Already initialized or in progress.");window.__taggerInitInProgress=!0;const e=()=>{try{if(window.taggerLoaded)return;0,window.tagger=tagger,window.tagger._init(),window.taggerLoaded=!0,console.log("[Tagger] Initialized.")}catch(e){console.error("[Tagger] Initialization failed:",e)}finally{window.__taggerInitInProgress=!1}};if("complete"===document.readyState||"interactive"===document.readyState)return void e();const t=setInterval(()=>{"complete"!==document.readyState&&"interactive"!==document.readyState||(clearInterval(t),e())},100)};_taggerAutoInit();export{_taggerAutoInit,tagger};