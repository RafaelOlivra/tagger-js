const tagger={SYNC_LOCK:!1,mainCallback:null,cachedIP:null,_init:async function(){if(this.utilIsBot())return void console.log("[Tagger] Bypassed.");let e=await this.userExists();if(window?.taggerConfig?.remoteSync&&window?.taggerConfig?.remoteEndpoint)try{e?console.log("[Tagger] Syncing existing user data..."):console.log("[Tagger] No existing user. Syncing user..."),await this._syncRemoteData()}catch(e){console.error("[Tagger] Remote sync error during init: ",e),console.log("[Tagger] Proceeding with local data only.")}const t=await this._retrieveUserID();window.taggerUserID=t,console.log("[Tagger] UserID:",t),window.taggerUserParams=this.getUserParams(),"loading"===document.readyState?document.addEventListener("DOMContentLoaded",async()=>{setTimeout(async()=>{this.triggerEvent(window,"tagger:init",[t]),await this.reload()},100)}):setTimeout(async()=>{this.triggerEvent(window,"tagger:init",[t]),await this.reload()},100);const r=window?.taggerConfig?.autoSyncInterval??0;r>0&&(console.log(`[Tagger] Auto sync enabled every ${r} ms.`),setInterval(async()=>{await this._syncRemoteData()},r)),console.log("[Tagger] Ready!"),window.taggerReady=!0},_bindEvents:function(){const e=this;document.querySelectorAll(".tg-form-submit").forEach(t=>{t.addEventListener("submit",function(t){e.fireCallback("tagger-submit",t)})});document.querySelectorAll(".tg-swap-child-href>a").forEach(e=>{e.classList.add("tg-conv-click")}),document.body.addEventListener("click",function(t){t.target.closest(".tg-conv-click")&&(e.doParamsSwap(),e.fireCallback("tagger-click",t))}),document.body.addEventListener("mousedown",function(t){1===t.button&&t.target.closest(".tg-conv-click")&&(e.doParamsSwap(),e.fireCallback("tagger-click",t))}),window.addEventListener("updated",function t(){window.removeEventListener("updated",t),setTimeout(async()=>{await e.reload()},100)},{once:!0})},registerCallback:function(e){return"function"==typeof e?(this.mainCallback=e,!0):(console.error("[Tagger] Invalid callback",e),!1)},fireCallback:function(e,t){"function"==typeof this.mainCallback?this.mainCallback(e,t):console.error("[Tagger] No callback function registered!")},userExists:async function(){return null!==await this._retrieveUserID(!1)},getUserID:()=>window.taggerUserID,_retrieveUserID:async function(e=!0){let t=this.getData("userID");if(!t&&e){const e=window?.taggerConfig?.prefix??"tg-",r=(new Date).getTime();t=await this.createNewUserID(e);const a=this.getUserReferrer(!0);this.storeData("userID",t),this.storeData("userCreateTime",r),this.storeData("updatedTime",r),this.storeData("userReferrer",a),console.log("[Tagger] UserID Created"),this.triggerEvent(window,"tagger:userIDCreated",[t]),this._syncRemoteData()}return t},createNewUserID:async function(e){let t=await this.utilGetUserIp()+navigator.userAgent+(new Date).getTime();return t=await this.utilSHA1(t),(e??"")+t},getUserParams:function(e=!0){let t=new URLSearchParams(window.location.search),r=window?.taggerConfig?.userParams??["utm_source","utm_medium","utm_campaign","utm_term","gclid","gbraid","fbclid"];!r&&window?.taggerConfig?.userURLParams&&(r=window.taggerConfig.userURLParams);let a=this.getData("userParams");a||(a=this.getData("userURLParams")),a&&"object"==typeof a&&!Array.isArray(a)||(a={});let i=!1;r.forEach(e=>{t.has(e)&&!(e in a)&&(a[e]=t.get(e),i=!0)});return document.cookie.split("; ").forEach(e=>{let[t,r]=e.split("=");if(!t.startsWith("__tg-param-"))return;const o=t.trim().replace(/^__tg-param-/,"");if(o&&!(o in a))try{r=atob(decodeURIComponent(r).trim()),a[o]=r,i=!0}catch(e){console.error("[Tagger] Error decoding cookie value: ",e)}}),i&&(this.storeData("userParams",a),this.storeData("updatedTime",(new Date).getTime()),e&&this._syncRemoteData()),a},getUserParam:function(e){return this.getUserParams()[e]},setUserParam:function(e,t,r=!0){let a=this.getUserParams();a&&"object"==typeof a&&!Array.isArray(a)||(a={});return a[e]!==t&&(a[e]=t,this.storeData("userParams",a),this.storeData("updatedTime",(new Date).getTime()),r&&this._syncRemoteData(),window.taggerUserParams=a,!0)},storeData:function(e,t){if(this.isLocked())return console.warn("[Tagger] Can't store data while a sync operation is in progress."),null;e="__tg-"+e;try{const r=JSON.stringify(t);if(!r)return console.error("[Tagger] Unable to stringify value for key:",e,t),null;const a=btoa(encodeURIComponent(r));return this.utilSetCookie(e,a,365),localStorage.setItem(e,a),t}catch(e){console.error("[Tagger] Error storing data: ",e)}},getData:function(e){e="__tg-"+e;try{let t=this.utilGetCookie(e);if(t||(t=localStorage.getItem(e),t&&this.utilSetCookie(e,t,365)),t)try{const e=decodeURIComponent(atob(t)),r=JSON.parse(e);if(r&&("object"==typeof r||"string"==typeof r||"number"==typeof r))return r}catch(t){console.warn("[Tagger] Error decoding or parsing data for key:",e,t)}return null}catch(t){return console.error("[Tagger] Error retrieving data for key:",e,t),null}},sync:async function(){await this._syncRemoteData()},_syncRemoteData:async function(e=!1){const t=window?.taggerConfig;if(!t?.remoteSync||!t?.remoteEndpoint)return;const r=t.remoteEndpoint,a=t?.remoteSyncEmptyParams??!1;if(!r?.startsWith("https://"))return void console.error("[Tagger] Remote endpoint must be HTTPS.");if(this.isLocked())return void console.warn("[Tagger] Sync operation already in progress.");this.lock();const i=this._getSyncableData(),o=Object.keys(i).length>=2;if(o&&!a&&!i?.userParams)return console.info("[Tagger] No user params to sync."),void this.unlock();try{let t=o&&!e?"GET_CHECK":"GET_FULL";o&&(e||this.isLocalDataNewer(i))?t="POST":o&&!this.isLocalDataNewer(i)&&(t="GET_CHECK");let a=null,n=r;if("POST"===t){const e=await this._prepareRemotePayload(i),t=await fetch(n,{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify(e)});if(t.ok)if(a=await t.json(),a.updated)this.unlock(),this.storeData("remoteUpdatedTime",a.updatedTime||0),console.log("[Tagger] Synced remote data.");else if(a.data){this.unlock();const e=this._decodeRemoteData(a.data);e&&this.isRemoteDataNewer(e)?(this._applyRemoteData(e),console.log("[Tagger] Synced remote data.")):this.storeData("remoteUpdatedTime",a.updatedTime||0)}else console.warn("[Tagger] No remote data available.");else console.error("[Tagger] Remote sync POST failed:",t.statusText);return void this.unlock()}{if("GET_CHECK"===t){const e=i.updatedTime||i.userParams?.timestamp||0;e&&(n=this.utilAppendURLParam(n,"updatedTime",e))}const e=await this.utilGetUserIp(),r=await fetch(this.utilAppendURLParam(n,"ip",e),{method:"GET"});if(r.ok){if(a=await r.json(),a.data){const e=this._decodeRemoteData(a.data);e&&this.isRemoteDataNewer(e)?(this.unlock(),this._applyRemoteData(e),console.log("[Tagger] Synced remote data.")):console.log("[Tagger] Remote data is not newer or is invalid.")}else if(!a.updated&&"GET_CHECK"===t){const e=i.updatedTime||i.userParams?.timestamp||0;e>(a.updatedTime||0)&&(this.unlock(),await this._syncRemoteData(!0))}}else console.error("[Tagger] Remote sync GET failed:",r.statusText)}}catch(e){console.error("[Tagger] Remote sync communication error: ",e)}this.unlock()},_prepareRemotePayload:async function(e){const t=await this.utilGetUserIp(),r={...e,userAgent:this.getUserAgent(),userReferrer:this.getUserReferrer(),userIP:t},a=JSON.stringify(r);return{data:btoa(a)}},_getSyncableData:function(){const e={},t=this.getData("userID"),r=this.getData("userParams"),a=this.getData("userCreateTime"),i=this.getData("updatedTime");return t&&(e.userID=t),r&&(e.userParams=r),a&&(e.userCreateTime=a),i&&(e.updatedTime=i),e},isLocalDataNewer:function(e){return(e.updatedTime||e.userParams?.timestamp||0)>(this.getData("remoteUpdatedTime")||0)},isRemoteDataNewer:function(e){const t=this.getData("updatedTime")||this.getData("userParams")?.timestamp||0;return(e.updatedTime||e.userParams?.timestamp||0)>t},_decodeRemoteData:function(e){try{const t=atob(e);return JSON.parse(t)}catch(e){return console.error("[Tagger] Error decoding or parsing remote data: ",e),null}},_applyRemoteData:function(e,t){this.isLocked()?console.warn("[Tagger] Sync operation already in progress."):(e.userID&&(this.storeData("userID",e.userID),window.taggerUserID=e.userID),e.userParams&&(this.storeData("userParams",e.userParams),window.taggerUserParams=e.userParams),e.userCreateTime&&this.storeData("userCreateTime",e.userCreateTime),e.updatedTime&&this.storeData("updatedTime",e.updatedTime),e.updatedTime&&this.storeData("remoteUpdatedTime",e.updatedTime),e.userReferrer&&this.storeData("userReferrer",e.userReferrer),this.triggerEvent(window,"tagger:remoteSyncApplied"))},isLocked:function(){return this.SYNC_LOCK},lock:function(){this.SYNC_LOCK=!0},unlock:function(){this.SYNC_LOCK=!1},getInstance:function(){return this},getUserReferrer:function(e=!1){if(!e){const e=this.getData("userReferrer");if(e)return e}const t=document.referrer;return this.setUserReferrer(t),t||""},setUserReferrer:function(e){setTimeout(()=>{this.storeData("userReferrer",e)},1e3)},getUserAgent:function(e=!1){if(!e){const e=this.getData("userAgent");if(e)return e}const t=navigator.userAgent;return setTimeout(()=>{this.storeData("userAgent",t)},1e3),t||""},doParamsSwap:function(){const e=this;document.querySelectorAll(".tg-swap-child-href>a").forEach(e=>{e.classList.add("tg-swap-href")});const t=document.querySelectorAll(".tg-swap-href");for(const r of t){if(r.classList.contains("tg-swap-href-done"))continue;let t=r.getAttribute("href"),a=e.utilMoveURLParamsToNewURL(t);a=e.utilSanitizeURL(a),r.setAttribute("href",a),r.classList.add("tg-swap-href-done")}},reload:async function(){this._bindEvents(),console.log("[Tagger] Reloaded"),this.triggerEvent(window,"tagger:reload"),window.taggerReady=!0},utilAppendURLParam:function(e,t,r){try{let a=new URL(e,window.location.href);return a.searchParams.append(t,r),a.href}catch(t){return console.error("[Tagger] Error appending URL param: ",t),e}},utilMoveURLParamsToNewURL:function(e,t=!0){if(!e||"#"===e)return e;try{let r=new URLSearchParams(window.location.search),a=new URL(e,window.location.href);if(r.forEach((e,t)=>{"user_id"!==t&&a.searchParams.append(t,e)}),t){let e=this.getUserID();a.searchParams.append("user_id",e)}return a.href}catch(t){return console.error("[Tagger] Error moving URL params to new URL: ",t),e}},utilGetParamFromURL:function(e){return new URLSearchParams(window.location.search).get(e)},utilGetUserIp:async function(e=!1){if(e=!!e||(window?.taggerConfig?.forceIPv4??!1),this.cachedIP)return this.cachedIP;let t=this.getData("userIP"),r=this.getData("userIPUpdatedTime")||0;const a=window?.taggerConfig?.ipCacheDuration??864e5;if(t&&this.utilValidateIp(t)&&Date.now()-r<a)return this.cachedIP=t,t;const i=e=>{this.cachedIP=e,setTimeout(()=>{this.storeData("userIP",e),this.storeData("userIPUpdatedTime",Date.now())},1e3)};try{const t=e?"https://api4.ipify.org/?format=json":"https://api.ipify.org?format=json",r=await fetch(t);if(r.ok){const e=await r.json();if(this.utilValidateIp(e.ip))return i(e.ip),e.ip}}catch(t){try{if(e){const e=await fetch("https://ipv4.icanhazip.com/");if(e.ok){const t=(await e.text()).trim();if(this.utilValidateIp(t))return i(t),t}}else{const e=await fetch("https://ipinfo.io/json");if(e.ok){const t=await e.json();if(this.utilValidateIp(t.ip))return i(t.ip),t.ip}}}catch(e){return console.error("[Tagger] Error retrieving user ip: ",e),"unknown"}}},utilValidateIp:function(e){return/^(?:[0-9]{1,3}\.){3}[0-9]{1,3}$|^([0-9a-fA-F]{1,4}:){7,7}[0-9a-fA-F]{1,4}|^([0-9a-fA-F]{1,4}:){1,7}:|^([0-9a-fA-F]{1,4}:){1,6}:[0-9a-fA-F]{1,4}|^([0-9a-fA-F]{1,4}:){1,5}(:[0-9a-fA-F]{1,4}){1,2}|^([0-9a-fA-F]{1,4}:){1,4}(:[0-9a-fA-F]{1,4}){1,3}|^([0-9a-fA-F]{1,4}:){1,3}(:[0-9a-fA-F]{1,4}){1,4}|^([0-9a-fA-F]{1,4}:){1,2}(:[0-9a-fA-F]{1,4}){1,5}|^[0-9a-fA-F]{1,4}:((:[0-9a-fA-F]{1,4}){1,6})|:((:[0-9a-fA-F]{1,4}){1,7}|:)$/.test(e)},utilIsBot:function(){const e=navigator.userAgent.toLowerCase();return["bot","crawl","spider","lighthouse"].some(t=>e.includes(t))},utilSHA1:async function(e){const t=(new TextEncoder).encode(e),r=await crypto.subtle.digest("SHA-1",t);return Array.from(new Uint8Array(r)).map(e=>("00"+e.toString(16)).slice(-2)).join("")},utilSanitizeURL:function(e){if(!e)return"";const t=decodeURIComponent(e).trim();return t.startsWith("/")||["http:","https:","tel:","#","/"].some(e=>t.toLowerCase().startsWith(e))?e:(console.warn("[Tagger] Blocked unsafe URL protocol:",e),"#")},utilGetCurrentDomain:function(){let e=window.location.hostname;e=e.replace(/^www\./,"");const t=e.split(".");return t.length>2&&(e=t.slice(-2).join(".")),e},utilSetCookie:function(e,t,r){let a="";if(r){const e=new Date;e.setTime(e.getTime()+24*r*60*60*1e3),a="; expires="+e.toUTCString()}document.cookie=e+"="+(t||"")+a+"; domain="+this.utilGetCurrentDomain()+"; path=/"},utilGetCookie:function(e){const t=e+"=",r=document.cookie.split(";");for(let e=0;e<r.length;e++){let a=r[e];for(;" "===a.charAt(0);)a=a.substring(1,a.length);if(0===a.indexOf(t))return a.substring(t.length,a.length)}return null},triggerEvent:function(e,t,r=[]){const a=new CustomEvent(t,{detail:r});e.dispatchEvent(a)}},_taggerAutoInit=()=>{if(window.taggerLoaded||window.__taggerInitInProgress)return void console.log("[Tagger] Already initialized or in progress.");window.__taggerInitInProgress=!0;const e=()=>{try{if(window.taggerLoaded)return;0,window.tagger=tagger,window.tagger._init(),window.taggerLoaded=!0,console.log("[Tagger] Initialized.")}catch(e){console.error("[Tagger] Initialization failed:",e)}finally{window.__taggerInitInProgress=!1}};if("complete"===document.readyState||"interactive"===document.readyState)return void e();const t=setInterval(()=>{"complete"!==document.readyState&&"interactive"!==document.readyState||(clearInterval(t),e())},100)};_taggerAutoInit();export{_taggerAutoInit,tagger};